name: Release

# 新tag则release
on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: borales/actions-yarn@v2.3.0
      - run: |
          cd ./web
          yarn install
          yarn run build
      - name: Upload frontend build
        uses: actions/upload-artifact@v2
        with:
          name: frontend-artifact
          path: ./web/build

  platform-build:
    strategy:
      matrix:
        go-version: [1.17.6]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.platform}}
    needs: build-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download frontend build
        uses: actions/download-artifact@v2
        with:
          name: frontend-artifact
          path: ./web/build
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{matrix.go-version}}
      - run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
      - name: Build package osx
        run: |
          wails doctor
          wails build
          cd ./build/bin ls
          # truning .app to .dmg
          appdmg dmg-spec.json redis-web-manager.dmg
        if: matrix.platform == 'macos-latest'
      # - name: Build package linux
      #   run: |
      #     sudo apt update && sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev
      #     wails doctor
      #     wails build
      #     cd ./build/bin ls
      #     # turn into app image
      #     wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
      #     chmod +x linuxdeploy*.AppImage
      #     ls ./
      #     ./linuxdeploy*.AppImage --appdir AppDir --executable Portfall --desktop-file=Portfall.AppImage.desktop --icon-file=appicon.png --output appimage
      #   if: matrix.platform == 'ubuntu-latest'
      - name: Build package windows
        run: |
          wails doctor
          wails build
        if: matrix.platform == 'windows-latest'

      - name: Upload artifact osx
        uses: actions/upload-artifact@v2
        with:
          name: redis-web-manager.dmg
          path: redis-web-manager.dmg
        if: matrix.platform == 'macos-latest'
      - name: Upload artifact windows
        uses: actions/upload-artifact@v2
        with:
          name: redis-web-manager.exe
          path: redis-web-manager.exe
        if: matrix.platform == 'windows-latest'
      

      # - run: wails doctor
      # - run: wails build
      # - name: Release
      #   uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: "latest"
      #     prerelease: true
      #     title: "Development Build"
      #     files: |
      #       ./build/bin/redis-web-manager.app

  # goreleaser:
  #   runs-on: ubuntu-latest
  #   needs: build-frontend
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Download frontend build
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: frontend-artifact
  #         path: ./web/build

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.17.6
  #     - run: |
  #         go install github.com/wailsapp/wails/v2/cmd/wails@latest

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Run GoReleaser
  #       uses: goreleaser/goreleaser-action@v2
  #       with:
  #         # either 'goreleaser' (default) or 'goreleaser-pro'
  #         distribution: goreleaser
  #         version: latest
  #         args: release --rm-dist
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
